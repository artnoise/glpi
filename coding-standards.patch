diff --git a/vendor/glpi-project/coding-standard/GlpiStandard/ruleset.xml b/vendor/glpi-project/coding-standard/GlpiStandard/ruleset.xml
index 27a7f52..840e85e 100644
--- a/vendor/glpi-project/coding-standard/GlpiStandard/ruleset.xml
+++ b/vendor/glpi-project/coding-standard/GlpiStandard/ruleset.xml
@@ -2,6 +2,8 @@
 <ruleset name="glpi">
   <description>GLPI Coding standard</description>
 
+  <config name="installed_paths" value="vendor/sirbrillig/phpcs-variable-analysis" />
+
   <!-- use http://edorian.github.io/php-coding-standard-generator/#phpcs -->
 
   <!-- white spaces at end of line or empty line have spaces -->
@@ -88,4 +90,7 @@
 
   <!-- cameCase format for methods and functions names -->
   <!--rule ref="Generic.NamingConventions.CamelCapsFunctionName" /-->
+
+  <!-- Undefined variables detection -->
+  <rule ref="VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable" />
 </ruleset>
diff --git a/vendor/glpi-project/coding-standard/composer.json b/vendor/glpi-project/coding-standard/composer.json
index 2a8af6b..8b5f54d 100644
--- a/vendor/glpi-project/coding-standard/composer.json
+++ b/vendor/glpi-project/coding-standard/composer.json
@@ -15,6 +15,7 @@
         "issues": "https://github.com/glpi-project/coding-standard/issues"
     },
     "require": {
-        "squizlabs/php_codesniffer": "^3.5"
+        "squizlabs/php_codesniffer": "^3.5",
+        "sirbrillig/phpcs-variable-analysis": "^2.8"
     }
 }
